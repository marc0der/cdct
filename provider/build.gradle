plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "java"
}

version "0.1"
group "org.example"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {

}

test.classpath += configurations.developmentOnly

mainClassName = "org.example.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

// This will be called before the provider task
task('startTheApp') {
    doLast {
        //start up your provider here
    }
}

// This will be called after the provider task
task('killTheApp') {
    doLast {
        // kill your provider here
    }
}

pact {
    serviceProviders {
        weatherProvider {
            protocol = 'http'
            host = 'localhost'
            port = 8080
            path = '/'

            startProviderTask = startTheApp
            terminateProviderTask = killTheApp

            hasPactWith('user-consumer') {
                pactFile = file('../consumer/target/pacts/weather-consumer-weather-provider.json')
            }
        }
    }
}
